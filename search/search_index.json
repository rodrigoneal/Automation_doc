{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Automation Studio Bem vindo ao Prod Studio. Vamos come\u00e7ar com a instala\u00e7\u00e3o e depois vamos cobrir com um Quickstart Demos uma pincelada sobre o Prod Studio . Caracteristicas O Driver faz toda a orquestra\u00e7\u00e3o, n\u00e3o precisando importa fun\u00e7\u00f5es. N\u00e3o precisa ficar chamando o robot toda hora, basta passar o caminho do toml para o Driver. O CLI grava um caminho relativo, facilitando colocar em produ\u00e7\u00e3o em outro ambiente. WaitElement espera o tempo settado. Instala\u00e7\u00e3o pip install git+https://github.com/digital-path/automation_studio#egg=automation_studio","title":"Home"},{"location":"#automation-studio","text":"Bem vindo ao Prod Studio. Vamos come\u00e7ar com a instala\u00e7\u00e3o e depois vamos cobrir com um Quickstart Demos uma pincelada sobre o Prod Studio .","title":"Automation Studio"},{"location":"#caracteristicas","text":"O Driver faz toda a orquestra\u00e7\u00e3o, n\u00e3o precisando importa fun\u00e7\u00f5es. N\u00e3o precisa ficar chamando o robot toda hora, basta passar o caminho do toml para o Driver. O CLI grava um caminho relativo, facilitando colocar em produ\u00e7\u00e3o em outro ambiente. WaitElement espera o tempo settado.","title":"Caracteristicas"},{"location":"#instalacao","text":"pip install git+https://github.com/digital-path/automation_studio#egg=automation_studio","title":"Instala\u00e7\u00e3o"},{"location":"driver/","text":"Usando o Driver O Driver como foi dito \u00e9 o orquestrador do Automation Studio. Ele \u00e9 bem simples basta voc\u00ea passar o caminho do arquivo do .toml. from automation_studio.prod_driver import Driver driver = Driver('arquivo.toml') S\u00f3 isso j\u00e1 \u00e9 necessario para conseguir fazer o driver orquestrar a biblioteca. Encontrando Elemento driver.find_element(\"elemento\") Procura o elemento na tela. find_element(*paths: str) paths : str: O nome dos caminhos das imagens/videos que ficam dentro do .toml. Return : FireHiving: Objeto d\u00e1 interatividade ao elemento. Procura o elemento na tela e retorna o primeiro elemento que encontrar. first_to_find(*paths: str, tip: List[int] = None) paths : str: O nome dos caminhos das imagens/videos que ficam dentro do .toml. tip : int: Dica na tela de onde fica a imagem/video procurado Return : FireHiving: Objeto d\u00e1 interatividade ao elemento. Interagindo com Elemento Clica no elemento. driver.find_element(\"elemento\").click() click(button: str = \"left\", clicks: int = 1, time_until_click: float = 0) button : str: Qual lado do mouse vai ser clicado. clicks : int: Quantas vezes o mouse vai clicar. time until_click _: float: O mouse ser\u00e1 movido para cima do elemento e vai aguardar o tempo passado. Return : None Move o mouse para cima do elemento. driver.find_element(\"elemento\").hover() hover(time_until_hover: float = 0) time until_click _: float: O mouse ser\u00e1 movido para cima do elemento e vai aguardar o tempo passado. Return : None Escreve o texto no elemento. driver.find_element(\"elemento\").writter() writter(text: str, clear: bool = False, time_until_writter: float = 0) text : str: Texto que ser\u00e1 escrito no elemento. clear : bool: Apaga o texto que j\u00e1 est\u00e1 no elemento antes de escrever. time until_writter _: float: Clica no elemento e aguarda o tempo passado antes de escrever. Return : None Copia o elemento. driver.find_element(\"elemento\").copy() copy(func_copy: Any, safe_copy: bool = False, time_until_copy: float = 0) func copy : Any: Fun\u00e7\u00e3o que ser\u00e1 chamada para fazer a copia. obs: Function safe copy : bool: Certifica que a copia n\u00e3o est\u00e1 vazia. time until_copy _: float: Clica no elemento e aguarda o tempo passado antes de copiar. Return : None Clica e arrasta um elemento para cima do outro. driver.find_element(\"elemento_drag\", \"elemento_drop\").drag_and_drop() drag_and_drop(duration: float = 0.5) duration :float: Tempo que arrasta um elemento no outro Return : None driver.find_element(\"elemento\").is_displayed() Mostra se o elemento est\u00e1 na tela is_displayed() Return : bool","title":"Driver"},{"location":"driver/#usando-o-driver","text":"O Driver como foi dito \u00e9 o orquestrador do Automation Studio. Ele \u00e9 bem simples basta voc\u00ea passar o caminho do arquivo do .toml. from automation_studio.prod_driver import Driver driver = Driver('arquivo.toml') S\u00f3 isso j\u00e1 \u00e9 necessario para conseguir fazer o driver orquestrar a biblioteca.","title":"Usando o Driver"},{"location":"driver/#encontrando-elemento","text":"driver.find_element(\"elemento\") Procura o elemento na tela. find_element(*paths: str) paths : str: O nome dos caminhos das imagens/videos que ficam dentro do .toml. Return : FireHiving: Objeto d\u00e1 interatividade ao elemento. Procura o elemento na tela e retorna o primeiro elemento que encontrar. first_to_find(*paths: str, tip: List[int] = None) paths : str: O nome dos caminhos das imagens/videos que ficam dentro do .toml. tip : int: Dica na tela de onde fica a imagem/video procurado Return : FireHiving: Objeto d\u00e1 interatividade ao elemento.","title":"Encontrando Elemento"},{"location":"driver/#interagindo-com-elemento","text":"Clica no elemento. driver.find_element(\"elemento\").click() click(button: str = \"left\", clicks: int = 1, time_until_click: float = 0) button : str: Qual lado do mouse vai ser clicado. clicks : int: Quantas vezes o mouse vai clicar. time until_click _: float: O mouse ser\u00e1 movido para cima do elemento e vai aguardar o tempo passado. Return : None Move o mouse para cima do elemento. driver.find_element(\"elemento\").hover() hover(time_until_hover: float = 0) time until_click _: float: O mouse ser\u00e1 movido para cima do elemento e vai aguardar o tempo passado. Return : None Escreve o texto no elemento. driver.find_element(\"elemento\").writter() writter(text: str, clear: bool = False, time_until_writter: float = 0) text : str: Texto que ser\u00e1 escrito no elemento. clear : bool: Apaga o texto que j\u00e1 est\u00e1 no elemento antes de escrever. time until_writter _: float: Clica no elemento e aguarda o tempo passado antes de escrever. Return : None Copia o elemento. driver.find_element(\"elemento\").copy() copy(func_copy: Any, safe_copy: bool = False, time_until_copy: float = 0) func copy : Any: Fun\u00e7\u00e3o que ser\u00e1 chamada para fazer a copia. obs: Function safe copy : bool: Certifica que a copia n\u00e3o est\u00e1 vazia. time until_copy _: float: Clica no elemento e aguarda o tempo passado antes de copiar. Return : None Clica e arrasta um elemento para cima do outro. driver.find_element(\"elemento_drag\", \"elemento_drop\").drag_and_drop() drag_and_drop(duration: float = 0.5) duration :float: Tempo que arrasta um elemento no outro Return : None driver.find_element(\"elemento\").is_displayed() Mostra se o elemento est\u00e1 na tela is_displayed() Return : bool","title":"Interagindo com Elemento"},{"location":"prodstudio/","text":"Prod Studio N\u00e3o tem como usar o Automation Studio sem aprender o basico do Prod Studio . Com a nova vers\u00e3o do Prod Studio voc\u00ea n\u00e3o precisa mais criar a pasta e o arquivo .toml. na chamada do Prod Studio voc\u00ea passa o nome dos arquivos. Exemplo: python -m prod_studio config.toml img Se n\u00e3o arquivos n\u00e3o existirem, o prod_studio vai criar automaticamente. Como Usar Crie uma pasta onde ficar\u00e1 as imagens e videos (Por padr\u00e3o usamos \"img\"). Crie um arquivo .toml (Por padr\u00e3o usamos \"config.toml\"). config.toml # Arquivo toml com os caminhos das imagens. img/ # Pasta com as imagens. logo.img # Imagem usada pelo robo. ... # images and outros arquivos. O Automation Studio faz a instala\u00e7\u00e3o do prod studio por dependencia, mas caso deseja pode fazer a instala\u00e7\u00e3o pelo pip. pip install git+https://github.com/digital-path/prod_studio@default#egg=prod_studio Mapeando o elemento python -m prod_studio config.toml img Mapeamento Simples. Exemplo: Mapear o logo da Google. Coloque o mouse na parte superior esquerdo do elemento que deseja mapear aperte F1 e levemente arraste para a parte inferior direita e aperte F1 novamente para finalizar o mapeamento. No terminal d\u00ea nome ao elemento e aperte ENTER . A imagem ser\u00e1 salva dentro da pasta passada na chamada do CLI do Prod Studio. O caminho relativo da imagem ser\u00e1 escrito dentro do arquivo .toml passado na chamada do CLI do Prod Studio. O terminal vai mostrar as chances do rob\u00f4 encontrar aquele elemento na tela. Quanto mais perto de 1.0 melhor e o rob\u00f4 s\u00f3 encontrar\u00e1 elementos com precis\u00e3o acima de 0.9 Mapeamento Multipla Exemplo: Mapear s\u00f3 um \"O\" do logo da Google. A sele\u00e7\u00e3o multipla \u00e9 bem parecida com a sele\u00e7\u00e3o simples. Coloque o mouse na parte superior esquerda do elemento pai aperte F2 e levemente arraste o mouse para a parte inferior direita e aperte F2 . Agora vai ao elemento filho que deseja mapear e fa\u00e7a o mesmo procedimento. No terminal d\u00ea nome ao elemento e aperte ENTER . A imagem ser\u00e1 salva dentro da pasta passada na chamada do CLI do Prod Studio. O caminho relativo da imagem ser\u00e1 escrito dentro do arquivo .toml passado na chamada do CLI do Prod Studio. Dentro do .toml ser\u00e1 salvo um tip, esse tip \u00e9 a dica de onde o bot vai procurar o elemento. Primeiro faz o mapeamento do elemento pai. Depois faz o mapeamento do elemento filho dentro do pai. Quanto mais perto de 1.0 melhor e o rob\u00f4 s\u00f3 encontrar\u00e1 elementos com precis\u00e3o acima de 0.9 Mapeamento OCR A sele\u00e7\u00e3o OCR encontra um texto na tela. Coloque o mouse na parte superior esquerdo do elemento que deseja mapear aperte F3 e levemente arraste para a parte inferior direita e aperte F3 novamente para finalizar o mapeamento. O modo de sele\u00e7\u00e3o \u00e9 muito parecido com a sele\u00e7\u00e3o simples, mas n\u00e3o mostrar\u00e1 a precis\u00e3o do bot achar o elemento e sim o texto na tela encontrando. O texto ser\u00e1 salvo dentro do .toml com o tip. Voc\u00ea pode apagar o expected_text para encontrar qualquer texto dentro daquele tip. Mapeamento por video Bem parecido com a sele\u00e7\u00e3o simples. Ele grava a tela e salva como video. Coloque o mouse na parte superior esquerdo do elemento que deseja mapear aperte F4 e levemente arraste para a parte inferior direita e aperte F4 novamente come\u00e7ar a gravar. Um contador vai mostrar o tempo de grava\u00e7\u00e3o. Aperte F4 para finalizar a grava\u00e7\u00e3o. O Video ser\u00e1 salva dentro da pasta passada na chamada do CLI do Prod Studio. O caminho relativo do video ser\u00e1 escrito dentro do arquivo .toml passado na chamada do CLI do Prod Studio.","title":"Prod Studio"},{"location":"prodstudio/#prod-studio","text":"N\u00e3o tem como usar o Automation Studio sem aprender o basico do Prod Studio . Com a nova vers\u00e3o do Prod Studio voc\u00ea n\u00e3o precisa mais criar a pasta e o arquivo .toml. na chamada do Prod Studio voc\u00ea passa o nome dos arquivos. Exemplo: python -m prod_studio config.toml img Se n\u00e3o arquivos n\u00e3o existirem, o prod_studio vai criar automaticamente.","title":"Prod Studio"},{"location":"prodstudio/#como-usar","text":"Crie uma pasta onde ficar\u00e1 as imagens e videos (Por padr\u00e3o usamos \"img\"). Crie um arquivo .toml (Por padr\u00e3o usamos \"config.toml\"). config.toml # Arquivo toml com os caminhos das imagens. img/ # Pasta com as imagens. logo.img # Imagem usada pelo robo. ... # images and outros arquivos. O Automation Studio faz a instala\u00e7\u00e3o do prod studio por dependencia, mas caso deseja pode fazer a instala\u00e7\u00e3o pelo pip. pip install git+https://github.com/digital-path/prod_studio@default#egg=prod_studio","title":"Como Usar"},{"location":"prodstudio/#mapeando-o-elemento","text":"python -m prod_studio config.toml img","title":"Mapeando o elemento"},{"location":"prodstudio/#mapeamento-simples","text":"Exemplo: Mapear o logo da Google. Coloque o mouse na parte superior esquerdo do elemento que deseja mapear aperte F1 e levemente arraste para a parte inferior direita e aperte F1 novamente para finalizar o mapeamento. No terminal d\u00ea nome ao elemento e aperte ENTER . A imagem ser\u00e1 salva dentro da pasta passada na chamada do CLI do Prod Studio. O caminho relativo da imagem ser\u00e1 escrito dentro do arquivo .toml passado na chamada do CLI do Prod Studio. O terminal vai mostrar as chances do rob\u00f4 encontrar aquele elemento na tela. Quanto mais perto de 1.0 melhor e o rob\u00f4 s\u00f3 encontrar\u00e1 elementos com precis\u00e3o acima de 0.9","title":"Mapeamento Simples."},{"location":"prodstudio/#mapeamento-multipla","text":"Exemplo: Mapear s\u00f3 um \"O\" do logo da Google. A sele\u00e7\u00e3o multipla \u00e9 bem parecida com a sele\u00e7\u00e3o simples. Coloque o mouse na parte superior esquerda do elemento pai aperte F2 e levemente arraste o mouse para a parte inferior direita e aperte F2 . Agora vai ao elemento filho que deseja mapear e fa\u00e7a o mesmo procedimento. No terminal d\u00ea nome ao elemento e aperte ENTER . A imagem ser\u00e1 salva dentro da pasta passada na chamada do CLI do Prod Studio. O caminho relativo da imagem ser\u00e1 escrito dentro do arquivo .toml passado na chamada do CLI do Prod Studio. Dentro do .toml ser\u00e1 salvo um tip, esse tip \u00e9 a dica de onde o bot vai procurar o elemento. Primeiro faz o mapeamento do elemento pai. Depois faz o mapeamento do elemento filho dentro do pai. Quanto mais perto de 1.0 melhor e o rob\u00f4 s\u00f3 encontrar\u00e1 elementos com precis\u00e3o acima de 0.9","title":"Mapeamento Multipla"},{"location":"prodstudio/#mapeamento-ocr","text":"A sele\u00e7\u00e3o OCR encontra um texto na tela. Coloque o mouse na parte superior esquerdo do elemento que deseja mapear aperte F3 e levemente arraste para a parte inferior direita e aperte F3 novamente para finalizar o mapeamento. O modo de sele\u00e7\u00e3o \u00e9 muito parecido com a sele\u00e7\u00e3o simples, mas n\u00e3o mostrar\u00e1 a precis\u00e3o do bot achar o elemento e sim o texto na tela encontrando. O texto ser\u00e1 salvo dentro do .toml com o tip. Voc\u00ea pode apagar o expected_text para encontrar qualquer texto dentro daquele tip.","title":"Mapeamento OCR"},{"location":"prodstudio/#mapeamento-por-video","text":"Bem parecido com a sele\u00e7\u00e3o simples. Ele grava a tela e salva como video. Coloque o mouse na parte superior esquerdo do elemento que deseja mapear aperte F4 e levemente arraste para a parte inferior direita e aperte F4 novamente come\u00e7ar a gravar. Um contador vai mostrar o tempo de grava\u00e7\u00e3o. Aperte F4 para finalizar a grava\u00e7\u00e3o. O Video ser\u00e1 salva dentro da pasta passada na chamada do CLI do Prod Studio. O caminho relativo do video ser\u00e1 escrito dentro do arquivo .toml passado na chamada do CLI do Prod Studio.","title":"Mapeamento por video"}]}